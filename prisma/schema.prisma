// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Task {
  id          String   @id @default(cuid())
  title       String
  completed   Boolean  @default(false)
  priority    Priority @default(MEDIUM)
  category    Category @default(OTHER)
  day         WeekDay
  date        String   // YYYY-MM-DD format
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("tasks")
}

model NotificationConfig {
  id          String   @id @default(cuid())
  email       String   @unique
  time        String   // HH:MM format
  isActive    Boolean  @default(true)
  jobId       String?  // ID del trabajo cron
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("notification_configs")
}

model UserPreferences {
  id          String   @id @default(cuid())
  userId      String   @unique // Identificador único del usuario (puede ser email, session ID, etc.)
  theme       String   @default("system") // 'light', 'dark', 'system'
  colorTheme  String   @default("default") // 'default', 'blue', 'green', etc.
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("user_preferences")
}

model Medication {
  id          String   @id @default(cuid())
  name        String
  dosage      String   // e.g., "500mg", "1 tableta"
  intervalHours Int    // Intervalo en horas (e.g., 8 para cada 8 horas)
  startTime   String   // Hora de inicio en formato HH:MM
  isActive    Boolean  @default(true)
  notes       String?  // Notas adicionales opcionales
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relación con las dosis tomadas
  doses       MedicationDose[]

  @@map("medications")
}

model MedicationDose {
  id           String     @id @default(cuid())
  medicationId String
  scheduledTime DateTime  // Hora programada para esta dosis
  takenAt      DateTime? // Hora real cuando se tomó (null si no se ha tomado)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  
  // Relación con el medicamento
  medication   Medication @relation(fields: [medicationId], references: [id], onDelete: Cascade)
  
  @@map("medication_doses")
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum WeekDay {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}

enum Category {
  WORK
  STUDY
  FINANCE
  HEALTH
  SOCIAL
  ENTERTAINMENT
  SHOPPING
  TRAVEL
  PERSONAL
  OTHER
}
