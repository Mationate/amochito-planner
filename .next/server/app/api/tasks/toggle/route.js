(()=>{var e={};e.id=687,e.ids=[687],e.modules={846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},4870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},3033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},7220:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>y,routeModule:()=>l,serverHooks:()=>g,workAsyncStorage:()=>c,workUnitAsyncStorage:()=>p});var a={};r.r(a),r.d(a,{PUT:()=>u});var s=r(2706),o=r(8203),n=r(5994),i=r(9187),d=r(9995);async function u(e){try{let{id:t}=await e.json();if(!t)return i.NextResponse.json({error:"Task ID is required"},{status:400});let r=await d.O.toggleTask(t);if(!r)return i.NextResponse.json({error:"Task not found"},{status:404});return i.NextResponse.json(r)}catch(e){return console.error("Error toggling task:",e),i.NextResponse.json({error:"Failed to toggle task"},{status:500})}}let l=new s.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/tasks/toggle/route",pathname:"/api/tasks/toggle",filename:"route",bundlePath:"app/api/tasks/toggle/route"},resolvedPagePath:"/Users/mati/Documents/proyectos/TRAE/src/app/api/tasks/toggle/route.ts",nextConfigOutput:"",userland:a}),{workAsyncStorage:c,workUnitAsyncStorage:p,serverHooks:g}=l;function y(){return(0,n.patchFetch)({workAsyncStorage:c,workUnitAsyncStorage:p})}},6487:()=>{},8335:()=>{},9995:(e,t,r)=>{"use strict";r.d(t,{O:()=>d});let a=require("@prisma/client"),s=globalThis.prisma??new a.PrismaClient({log:["query"]}),o={formatDate:e=>e.toISOString().split("T")[0],getWeekStart:e=>{let t=new Date(e),r=t.getDay(),a=t.getDate()-r+(0===r?-6:1);return new Date(t.setDate(a))},addDays:(e,t)=>{let r=new Date(e);return r.setDate(r.getDate()+t),r},addWeeks:(e,t)=>o.addDays(e,7*t),getWeekInfo:e=>{let t=o.getWeekStart(e),r=o.addDays(t,6),a=new Date(t.getFullYear(),0,1),s=Math.ceil(((t.getTime()-a.getTime())/864e5+a.getDay()+1)/7),n=[];for(let e=0;e<7;e++){let r=o.addDays(t,e);n.push({date:r,dayName:o.getDayName(e),dayNumber:r.getDate(),monthName:r.toLocaleDateString("es-ES",{month:"long"})})}return{weekStart:t,weekEnd:r,weekNumber:s,year:t.getFullYear(),days:n}},getDayName:e=>["monday","tuesday","wednesday","thursday","friday","saturday","sunday"][e],isSameWeek:(e,t)=>{let r=o.getWeekStart(e),a=o.getWeekStart(t);return r.getTime()===a.getTime()}},n=e=>({id:e.id,title:e.title,completed:e.completed,priority:e.priority.toLowerCase(),category:e.category?.toLowerCase()||"other",day:e.day,date:e.date,createdAt:e.createdAt,updatedAt:e.updatedAt}),i=e=>{let t={...e};return e.priority&&(t.priority=e.priority.toUpperCase()),delete t.id,delete t.createdAt,delete t.updatedAt,t},d={async getTasks(){try{return(await s.task.findMany({orderBy:[{date:"asc"},{createdAt:"asc"}]})).map(n)}catch(e){return console.error("Error fetching tasks:",e),[]}},async createTask(e,t,r,a="medium",o="other"){try{let i=await s.task.create({data:{title:e,day:t,date:r,priority:a.toUpperCase(),category:o.toUpperCase(),completed:!1}});return n(i)}catch(e){return console.error("Error creating task:",e),null}},async updateTask(e,t){try{let r=await s.task.update({where:{id:e},data:i(t)});return n(r)}catch(e){return console.error("Error updating task:",e),null}},async deleteTask(e){try{return await s.task.delete({where:{id:e}}),!0}catch(e){return console.error("Error deleting task:",e),!1}},async getTasksByDate(e){try{return(await s.task.findMany({where:{date:e},orderBy:{createdAt:"asc"}})).map(n)}catch(e){return console.error("Error fetching tasks by date:",e),[]}},async getTasksByWeek(e){try{let t=new Date(e),r=o.addDays(t,6);return(await s.task.findMany({where:{date:{gte:o.formatDate(t),lte:o.formatDate(r)}},orderBy:[{date:"asc"},{createdAt:"asc"}]})).map(n)}catch(e){return console.error("Error fetching tasks by week:",e),[]}},async toggleTask(e){try{let t=await s.task.findUnique({where:{id:e}});if(!t)return null;let r=await s.task.update({where:{id:e},data:{completed:!t.completed}});return n(r)}catch(e){return console.error("Error toggling task:",e),null}},async getTaskStats(e){let t=e;t||(t=await this.getTasks());let r=t.length,a=t.filter(e=>e.completed).length,s=r>0?Math.round(a/r*100):0;return{total:r,completed:a,pending:r-a,completionRate:s}}}}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[638,452],()=>r(7220));module.exports=a})();